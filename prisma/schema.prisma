generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model board {
  board_id   BigInt   @id @default(autoincrement())
  created_at DateTime @db.DateTime(0)
  content    String   @db.VarChar(255)
  count      Int      @default(0)
  nickname   String?  @db.VarChar(255)
  title      String   @db.VarChar(255)
  updated_at DateTime @db.DateTime(0)
}

model bus {
  timestamp Int   @id @db.UnsignedInt
  lat       Float @db.Float
  lng       Float @db.Float
}

model bus_notice {
  bus_notice_id BigInt @id @default(autoincrement())
  url           String @db.VarChar(255)
  title         String @db.VarChar(255)
}

model bus_route {
  bus_route_id                                 BigInt    @id @default(autoincrement())
  department_time_list                         String    @db.VarChar(255)
  name                                         String    @db.VarChar(15)
  type                                         String    @db.VarChar(255)
  arr_bus_stop_id                              BigInt?
  dep_bus_stop_id                              BigInt?
  mid_bus_stop_id                              BigInt?
  bus_stop_bus_route_arr_bus_stop_idTobus_stop bus_stop? @relation("bus_route_arr_bus_stop_idTobus_stop", fields: [arr_bus_stop_id], references: [bus_stop_id], onDelete: NoAction, onUpdate: NoAction, map: "FK24mqjqhtmufnkj292v1qb2x35")
  bus_stop_bus_route_mid_bus_stop_idTobus_stop bus_stop? @relation("bus_route_mid_bus_stop_idTobus_stop", fields: [mid_bus_stop_id], references: [bus_stop_id], onDelete: NoAction, onUpdate: NoAction, map: "FK3kmx8so441wxatj0qubpfph5s")
  bus_stop_bus_route_dep_bus_stop_idTobus_stop bus_stop? @relation("bus_route_dep_bus_stop_idTobus_stop", fields: [dep_bus_stop_id], references: [bus_stop_id], onDelete: NoAction, onUpdate: NoAction, map: "FKqd2ynds4j1r8noeftw7qmw0a2")

  @@index([arr_bus_stop_id], map: "FK24mqjqhtmufnkj292v1qb2x35")
  @@index([mid_bus_stop_id], map: "FK3kmx8so441wxatj0qubpfph5s")
  @@index([dep_bus_stop_id], map: "FKqd2ynds4j1r8noeftw7qmw0a2")
}

model bus_stop {
  bus_stop_id                                   BigInt      @id @default(autoincrement())
  lat                                           Decimal     @db.Decimal(19, 2)
  lng                                           Decimal     @db.Decimal(19, 2)
  name                                          String      @unique(map: "UK_nrs39h4j9x1d4vhmretee9mak") @db.VarChar(15)
  bus_route_bus_route_arr_bus_stop_idTobus_stop bus_route[] @relation("bus_route_arr_bus_stop_idTobus_stop")
  bus_route_bus_route_mid_bus_stop_idTobus_stop bus_route[] @relation("bus_route_mid_bus_stop_idTobus_stop")
  bus_route_bus_route_dep_bus_stop_idTobus_stop bus_route[] @relation("bus_route_dep_bus_stop_idTobus_stop")
}

model campus_amenity {
  amenity_id BigInt  @id @default(autoincrement())
  category   String? @db.VarChar(255)
  detail     String? @db.VarChar(255)
  image      String? @db.VarChar(255)
  lat        Decimal @db.Decimal(19, 6)
  lng        Decimal @db.Decimal(19, 6)
  name       String  @db.VarChar(255)
}

model member {
  member_id BigInt @id @default(autoincrement())
  auth      String @db.VarChar(255)
  email     String @unique(map: "UK_mbmcqelty0fbrvxp1q58dn57t") @db.VarChar(20)
  nickname  String @unique(map: "UK_hh9kg6jti4n1eoiertn2k6qsc") @db.VarChar(18)
  password  String @db.VarChar(255)
}

model notice {
  notice_id  BigInt   @id @default(autoincrement())
  created_at DateTime @db.DateTime(0)
  content    String   @db.VarChar(255)
  count      Int      @default(0)
  nickname   String?  @db.VarChar(255)
  title      String   @db.VarChar(255)
  updated_at DateTime @db.DateTime(0)
}

model partnership {
  partnership_id BigInt  @id @unique(map: "partnership_id_UNIQUE") @default(autoincrement())
  category       String? @db.VarChar(255)
  detail         String  @db.VarChar(255)
  expired        String? @db.VarChar(255)
  lng            Decimal @db.Decimal(10, 6)
  lat            Decimal @db.Decimal(10, 6)
  name           String  @db.VarChar(255)
  image          String? @db.VarChar(255)
}
